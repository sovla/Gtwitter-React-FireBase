{"version":3,"sources":["fbase.js","component/AuthForm.js","routes/Auth.js","routes/Gweet.js","component/NweetFactory.js","routes/Home.js","routes/Navigation.js","routes/Profile.js","component/Router.js","component/App.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","auth","dbService","firestore","storageService","storage","AuthForm","useState","email","setEmail","password","setPassword","error","setError","newAccount","setNewAccount","onChange","event","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","data","signInWithEmailAndPassword","console","log","message","type","placeholder","required","onClick","prev","Auth","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","Gweet","gweetObj","isOwner","editing","setEditing","text","newGweet","setNewGweet","onDeleteClick","window","confirm","doc","id","delete","attachmentUrl","refFromURL","toggleEditClick","update","src","width","height","NweetFactory","userObj","gweet","setGweet","attachment","setAttachment","attachmentRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","collection","add","createAt","Date","now","createId","maxLength","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","Home","gweets","setGweets","useEffect","onSnapshot","snapshot","newArray","docs","map","document","Navigation","to","displayName","Profile","refreshUser","newDisplayName","setNewDisplayName","history","useHistory","updateProfile","signOut","push","AppRouter","isLoggedIn","exact","path","App","init","setInit","setUserObj","onAuthStateChanged","user","args","Boolean","currentUser","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.dbbdc760.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/storage\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyC354fTkn4FzouHEodJK1Wp8uv2cduykrw\",\r\n  authDomain: \"gwitter-e2519.firebaseapp.com\",\r\n  projectId: \"gwitter-e2519\",\r\n  storageBucket: \"gwitter-e2519.appspot.com\",\r\n  messagingSenderId: \"656420529889\",\r\n  appId: \"1:656420529889:web:15409148998d0d0058f9a0\",\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const firebaseInstance = firebase;\r\nexport const authService = firebase.auth();\r\nexport const dbService = firebase.firestore();\r\nexport const storageService = firebase.storage();\r\n","import React, { useState } from \"react\";\r\nimport { authService } from \"fbase\";\r\n\r\nconst AuthForm = () => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const [newAccount, setNewAccount] = useState(true);\r\n\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { name, value },\r\n    } = event;\r\n    if (name === \"email\") {\r\n      setEmail(value);\r\n    } else if (name === \"password\") {\r\n      setPassword(value);\r\n    }\r\n  };\r\n\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    try {\r\n      let data;\r\n      if (newAccount === true) {\r\n        //create newAccount\r\n        data = await authService.createUserWithEmailAndPassword(\r\n          email,\r\n          password\r\n        );\r\n      } else {\r\n        //log in\r\n        data = await authService.signInWithEmailAndPassword(email, password);\r\n      }\r\n      console.log(data);\r\n    } catch (error) {\r\n      setError(error.message);\r\n    }\r\n  };\r\n\r\n  const toggleAccount = () => setNewAccount((prev) => !prev);\r\n  return (\r\n    <>\r\n      <form onSubmit={onSubmit}>\r\n        <input\r\n          name=\"email\"\r\n          type=\"email\"\r\n          placeholder=\"Email\"\r\n          required\r\n          value={email}\r\n          onChange={onChange}\r\n        />\r\n        <input\r\n          name=\"password\"\r\n          type=\"password\"\r\n          placeholder=\"Password\"\r\n          required\r\n          value={password}\r\n          onChange={onChange}\r\n        />\r\n        <input type=\"submit\" value={newAccount ? \"Create Account\" : \"Log In\"} />\r\n        {error}\r\n      </form>\r\n      <span onClick={toggleAccount}>\r\n        {newAccount ? \"Sign In\" : \"Create Account\"}\r\n      </span>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AuthForm;\r\n","import { authService, firebaseInstance } from \"fbase\";\r\nimport AuthForm from \"component/AuthForm\";\r\n\r\nconst Auth = () => {\r\n  const onSocialClick = async (event) => {\r\n    const {\r\n      target: { name },\r\n    } = event;\r\n    let provider;\r\n    if (name === \"google\") {\r\n      provider = new firebaseInstance.auth.GoogleAuthProvider();\r\n    } else if (name === \"github\") {\r\n      provider = new firebaseInstance.auth.GithubAuthProvider();\r\n    }\r\n    const data = await authService.signInWithPopup(provider);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <AuthForm />\r\n\r\n      <div>\r\n        <button onClick={onSocialClick} name=\"google\">\r\n          Continue with Google\r\n        </button>\r\n        <button onClick={onSocialClick} name=\"github\">\r\n          Continue with Github\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Auth;\r\n","import { dbService, storageService } from \"fbase\";\r\nimport { useState } from \"react\";\r\n\r\nconst Gweet = ({ gweetObj, isOwner }) => {\r\n  const [editing, setEditing] = useState(false);\r\n  const [newGweet, setNewGweet] = useState(gweetObj.text);\r\n\r\n  const onDeleteClick = async () => {\r\n    const ok = window.confirm(\"삭제 하시겠습니까?\");\r\n    if (ok) {\r\n      await dbService.doc(`gweet/${gweetObj.id}`).delete();\r\n      if (gweetObj.attachmentUrl !== \"\") {\r\n        await storageService.refFromURL(gweetObj.attachmentUrl).delete();\r\n      }\r\n    }\r\n  };\r\n\r\n  const toggleEditClick = () => {\r\n    setEditing((prev) => !prev);\r\n  };\r\n\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setNewGweet(value);\r\n  };\r\n\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    await dbService.doc(`gweet/${gweetObj.id}`).update({ text: newGweet });\r\n    setEditing(false);\r\n  };\r\n  return (\r\n    <div>\r\n      {editing ? (\r\n        <>\r\n          <form onSubmit={onSubmit}>\r\n            <input value={newGweet} onChange={onChange} required />\r\n          </form>\r\n          <button onClick={toggleEditClick}>Cancel</button>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <h4>{gweetObj.text}</h4>\r\n          {gweetObj.attachmentUrl && (\r\n            <img src={gweetObj.attachmentUrl} width=\"50px\" height=\"50px\" />\r\n          )}\r\n          {isOwner && (\r\n            <>\r\n              <button onClick={onDeleteClick}>Delete Gweet</button>\r\n              <button onClick={toggleEditClick}>Edit Gweet</button>\r\n            </>\r\n          )}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Gweet;\r\n","import { useState } from \"react\";\r\nimport { storageService, dbService } from \"fbase\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nconst NweetFactory = ({ userObj }) => {\r\n  const [gweet, setGweet] = useState(\"\");\r\n  const [attachment, setAttachment] = useState(\"\");\r\n\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    let attachmentUrl = \"\";\r\n    if (attachment !== \"\") {\r\n      const attachmentRef = storageService\r\n        .ref()\r\n        .child(`${userObj.uid}/${uuidv4()}`);\r\n      const response = await attachmentRef.putString(attachment, \"data_url\");\r\n      attachmentUrl = await response.ref.getDownloadURL();\r\n    }\r\n    await dbService.collection(\"gweet\").add({\r\n      text: gweet,\r\n      createAt: Date.now(),\r\n      createId: userObj.uid,\r\n      attachmentUrl,\r\n    });\r\n    setGweet(\"\");\r\n    setAttachment(\"\");\r\n  };\r\n\r\n  const onChange = (event) => {\r\n    event.preventDefault();\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setGweet(value);\r\n  };\r\n\r\n  const onFileChange = (event) => {\r\n    const {\r\n      target: { files },\r\n    } = event;\r\n    const theFile = files[0];\r\n    const reader = new FileReader();\r\n    reader.onloadend = (finishedEvent) => {\r\n      const {\r\n        currentTarget: { result },\r\n      } = finishedEvent;\r\n      setAttachment(result);\r\n    };\r\n    reader.readAsDataURL(theFile);\r\n  };\r\n\r\n  const onClearAttachment = () => setAttachment(\"\");\r\n  return (\r\n    <form onSubmit={onSubmit}>\r\n      <input\r\n        value={gweet}\r\n        onChange={onChange}\r\n        type=\"text\"\r\n        placeholder=\"What's on your mind?\"\r\n        maxLength={120}\r\n      />\r\n      <input type=\"file\" accept=\"image/*\" onChange={onFileChange} />\r\n      <input type=\"submit\" value=\"Gweet\" />\r\n\r\n      <div>\r\n        {attachment && <img src={attachment} width=\"50px\" height=\"50px\" />}\r\n        <button onClick={onClearAttachment}>Clear</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default NweetFactory;\r\n","import { dbService } from \"fbase\";\r\nimport { useState, useEffect } from \"react\";\r\nimport Gweet from \"./Gweet\";\r\nimport NweetFactory from \"component/NweetFactory\";\r\n\r\nconst Home = ({ userObj }) => {\r\n  const [gweets, setGweets] = useState([]);\r\n\r\n  useEffect(() => {\r\n    dbService.collection(\"gweet\").onSnapshot((snapshot) => {\r\n      const newArray = snapshot.docs.map((document) => ({\r\n        id: document.id,\r\n        ...document.data(),\r\n      }));\r\n      setGweets(newArray);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <NweetFactory />\r\n      <div>\r\n        {gweets.map((gweet) => (\r\n          <Gweet\r\n            key={gweet.id}\r\n            gweetObj={gweet}\r\n            isOwner={gweet.createId === userObj.uid}\r\n          />\r\n        ))}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Navigation = ({ userObj }) => {\r\n  return (\r\n    <nav>\r\n      <ul>\r\n        <li>\r\n          <Link to=\"/\">Home</Link>\r\n        </li>\r\n        <li>\r\n          <Link to=\"/profile\">{userObj.displayName}의 Profile</Link>\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navigation;\r\n","import { authService, dbService } from \"fbase\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useState, useEffect } from \"react\";\r\n\r\nconst Profile = ({ userObj, refreshUser }) => {\r\n  const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\r\n\r\n  const history = useHistory();\r\n  const onLogOutClick = () => {\r\n    authService.signOut();\r\n    history.push(\"/\");\r\n  };\r\n\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setNewDisplayName(value);\r\n  };\r\n\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    if (userObj.displayName !== newDisplayName) {\r\n      await userObj.updateProfile({ displayName: newDisplayName });\r\n      refreshUser();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <form onSubmit={onSubmit}>\r\n        <input\r\n          type=\"text\"\r\n          onChange={onChange}\r\n          value={newDisplayName}\r\n          placeholder=\"Display Name\"\r\n        />\r\n        <input type=\"submit\" value=\"Update Profile\" />\r\n      </form>\r\n      <button onClick={onLogOutClick}>Log Out</button>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n// const getMyGweets = async () => {\r\n//   const gweets = await dbService\r\n//     .collection(\"gweets\")\r\n//     .where(\"createId\", \"==\", userObj.uid)\r\n//     .orderBy(\"createAt\", \"asc\")\r\n//     .get();\r\n//   console.log(gweets);\r\n// };\r\n\r\n// useEffect(() => {\r\n//   getMyGweets();\r\n// }, []);\r\n// 필터링 코드\r\n","import { HashRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport Auth from \"routes/Auth\";\r\nimport Home from \"routes/Home\";\r\nimport Navigation from \"routes/Navigation\";\r\nimport Profile from \"routes/Profile\";\r\n\r\nconst AppRouter = ({ isLoggedIn, userObj, refreshUser }) => {\r\n  return (\r\n    <Router>\r\n      {isLoggedIn && <Navigation userObj={userObj} />}\r\n      <Switch>\r\n        {isLoggedIn ? (\r\n          <>\r\n            <Route exact path=\"/\">\r\n              <Home userObj={userObj} />\r\n            </Route>\r\n            <Route exact path=\"/profile\">\r\n              <Profile userObj={userObj} refreshUser={refreshUser} />\r\n            </Route>\r\n          </>\r\n        ) : (\r\n          <Route exact path=\"/\">\r\n            <Auth />\r\n          </Route>\r\n        )}\r\n      </Switch>\r\n    </Router>\r\n  );\r\n};\r\nexport default AppRouter;\r\n","import { useEffect, useState } from \"react\";\r\nimport AppRouter from \"component/Router\";\r\nimport { authService } from \"fbase\";\r\n\r\nfunction App() {\r\n  const [init, setInit] = useState(false);\r\n\r\n  const [userObj, setUserObj] = useState(null);\r\n\r\n  const refreshUser = () => {\r\n    const user = authService.currentUser;\r\n    setUserObj({\r\n      uid: user.uid,\r\n      displayName: user.displayName,\r\n      updateProfile: (args) => user.updateProfile(args),\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    authService.onAuthStateChanged((user) => {\r\n      if (user) {\r\n        setUserObj({\r\n          uid: user.uid,\r\n          displayName: user.displayName,\r\n          updateProfile: (args) => user.updateProfile(args),\r\n        });\r\n      } else {\r\n        setUserObj(false);\r\n      }\r\n      setInit(true);\r\n    });\r\n  }, []);\r\n  return (\r\n    <>\r\n      {init ? (\r\n        <AppRouter\r\n          isLoggedIn={Boolean(userObj)}\r\n          userObj={userObj}\r\n          refreshUser={refreshUser}\r\n        />\r\n      ) : (\r\n        \"initializing..\"\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport App from \"component/App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}