{"version":3,"sources":["fbase.js","component/AuthForm.js","routes/Auth.js","routes/Gweet.js","component/NweetFactory.js","routes/Home.js","routes/Navigation.js","routes/Profile.js","component/Router.js","component/App.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","auth","dbService","firestore","storageService","storage","AuthForm","useState","email","setEmail","password","setPassword","error","setError","newAccount","setNewAccount","onChange","event","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","signInWithEmailAndPassword","message","className","type","placeholder","required","onClick","prev","Auth","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","icon","faTwitter","color","size","style","marginBottom","faGoogle","faGithub","Gweet","gweetObj","isOwner","editing","setEditing","text","newGweet","setNewGweet","onDeleteClick","window","confirm","doc","id","delete","attachmentUrl","refFromURL","toggleEditClick","update","src","width","height","faTrash","faPencilAlt","NweetFactory","userObj","nweet","setNweet","attachment","setAttachment","console","log","attachmentRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","nweetObj","createdAt","Date","now","creatorId","collection","add","maxLength","htmlFor","faPlus","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","Boolean","readAsDataURL","opacity","backgroundImage","faTimes","Home","gweets","setGweets","useEffect","orderBy","onSnapshot","snapshot","newArray","docs","map","document","data","marginTop","gweet","createId","Navigation","display","justifyContent","to","marginRight","marginLeft","flexDirection","alignItems","fontSize","faUser","margintop","displayName","Profile","refreshUser","newDisplayName","setNewDisplayName","history","useHistory","updateProfile","autoFocus","signOut","push","AppRouter","isLoggedIn","maxWidth","margin","exact","path","App","init","setInit","setUserObj","onAuthStateChanged","user","args","currentUser","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.1bbddf13.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/storage\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyC354fTkn4FzouHEodJK1Wp8uv2cduykrw\",\r\n  authDomain: \"gwitter-e2519.firebaseapp.com\",\r\n  projectId: \"gwitter-e2519\",\r\n  storageBucket: \"gwitter-e2519.appspot.com\",\r\n  messagingSenderId: \"656420529889\",\r\n  appId: \"1:656420529889:web:15409148998d0d0058f9a0\",\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const firebaseInstance = firebase;\r\nexport const authService = firebase.auth();\r\nexport const dbService = firebase.firestore();\r\nexport const storageService = firebase.storage();\r\n","import React, { useState } from \"react\";\r\nimport { authService } from \"fbase\";\r\n\r\nconst AuthForm = () => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const [newAccount, setNewAccount] = useState(true);\r\n\r\n  const inputStyles = {};\r\n\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { name, value },\r\n    } = event;\r\n    if (name === \"email\") {\r\n      setEmail(value);\r\n    } else if (name === \"password\") {\r\n      setPassword(value);\r\n    }\r\n  };\r\n\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    try {\r\n      let data;\r\n      if (newAccount === true) {\r\n        //create newAccount\r\n        data = await authService.createUserWithEmailAndPassword(\r\n          email,\r\n          password\r\n        );\r\n      } else {\r\n        //log in\r\n        data = await authService.signInWithEmailAndPassword(email, password);\r\n      }\r\n    } catch (error) {\r\n      setError(error.message);\r\n    }\r\n  };\r\n\r\n  const toggleAccount = () => setNewAccount((prev) => !prev);\r\n  return (\r\n    <>\r\n      <form onSubmit={onSubmit} className=\"container\">\r\n        <input\r\n          className=\"authInput\"\r\n          name=\"email\"\r\n          type=\"email\"\r\n          placeholder=\"Email\"\r\n          required\r\n          value={email}\r\n          onChange={onChange}\r\n        />\r\n        <input\r\n          className=\"authInput\"\r\n          name=\"password\"\r\n          type=\"password\"\r\n          placeholder=\"Password\"\r\n          required\r\n          value={password}\r\n          onChange={onChange}\r\n        />\r\n        <input\r\n          className=\"authInput authSubmit\"\r\n          type=\"submit\"\r\n          value={newAccount ? \"Create Account\" : \"Log In\"}\r\n        />\r\n        {error && <span className=\"authError\">{error}</span>}\r\n      </form>\r\n      <span onClick={toggleAccount} className=\"authSwitch\">\r\n        {newAccount ? \"Sign In\" : \"Create Account\"}\r\n      </span>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AuthForm;\r\n","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faTwitter,\r\n  faGoogle,\r\n  faGithub,\r\n} from \"@fortawesome/free-brands-svg-icons\";\r\nimport { authService, firebaseInstance } from \"fbase\";\r\nimport AuthForm from \"component/AuthForm\";\r\n\r\nconst Auth = () => {\r\n  const onSocialClick = async (event) => {\r\n    const {\r\n      target: { name },\r\n    } = event;\r\n    let provider;\r\n    if (name === \"google\") {\r\n      provider = new firebaseInstance.auth.GoogleAuthProvider();\r\n    } else if (name === \"github\") {\r\n      provider = new firebaseInstance.auth.GithubAuthProvider();\r\n    }\r\n    const data = await authService.signInWithPopup(provider);\r\n  };\r\n\r\n  return (\r\n    <div className=\"authContainer\">\r\n      <FontAwesomeIcon\r\n        icon={faTwitter}\r\n        color={\"#04AAFF\"}\r\n        size=\"3x\"\r\n        style={{ marginBottom: 30 }}\r\n      />\r\n      <AuthForm />\r\n\r\n      <div className=\"authBtns\">\r\n        <button onClick={onSocialClick} name=\"google\" className=\"authBtns\">\r\n          Continue with Google <FontAwesomeIcon icon={faGoogle} />\r\n        </button>\r\n        <button onClick={onSocialClick} name=\"github\" className=\"authBtns\">\r\n          Continue with Github <FontAwesomeIcon icon={faGithub} />\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Auth;\r\n","import { dbService, storageService } from \"fbase\";\r\nimport { useState } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Gweet = ({ gweetObj, isOwner }) => {\r\n  const [editing, setEditing] = useState(false);\r\n  const [newGweet, setNewGweet] = useState(gweetObj.text);\r\n\r\n  const onDeleteClick = async () => {\r\n    const ok = window.confirm(\"삭제 하시겠습니까?\");\r\n    if (ok) {\r\n      await dbService.doc(`gweet/${gweetObj.id}`).delete();\r\n      if (gweetObj.attachmentUrl !== \"\") {\r\n        await storageService.refFromURL(gweetObj.attachmentUrl).delete();\r\n      }\r\n    }\r\n  };\r\n\r\n  const toggleEditClick = () => {\r\n    setEditing((prev) => !prev);\r\n  };\r\n\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setNewGweet(value);\r\n  };\r\n\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    await dbService.doc(`gweet/${gweetObj.id}`).update({ text: newGweet });\r\n    setEditing(false);\r\n  };\r\n  return (\r\n    <div className=\"nweet\">\r\n      {editing ? (\r\n        <>\r\n          <form onSubmit={onSubmit} className=\"container nweetEdit\">\r\n            <input\r\n              value={newGweet}\r\n              onChange={onChange}\r\n              required\r\n              className=\"formInput\"\r\n            />\r\n            <input type=\"submit\" value=\"Update Gweet\" className=\"formBtn\" />\r\n          </form>\r\n          <button onClick={toggleEditClick} className=\"formBtn cancelBtn\">\r\n            Cancel\r\n          </button>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <h4>{gweetObj.text}</h4>\r\n          {gweetObj.attachmentUrl && (\r\n            <img src={gweetObj.attachmentUrl} width=\"50px\" height=\"50px\" />\r\n          )}\r\n          {isOwner && (\r\n            <div className=\"nweet__actions\">\r\n              <span onClick={onDeleteClick}>\r\n                <FontAwesomeIcon icon={faTrash} />\r\n              </span>\r\n              <span onClick={toggleEditClick}>\r\n                <FontAwesomeIcon icon={faPencilAlt} />\r\n              </span>\r\n            </div>\r\n          )}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Gweet;\r\n","import { useState } from \"react\";\r\nimport { storageService, dbService } from \"fbase\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst NweetFactory = ({ userObj }) => {\r\n  const [nweet, setNweet] = useState(\"\");\r\n  const [attachment, setAttachment] = useState(\"\");\r\n  const onSubmit = async (event) => {\r\n    console.log(\"submit\");\r\n    if (nweet === \"\") {\r\n      return;\r\n    }\r\n    event.preventDefault();\r\n    let attachmentUrl = \"\";\r\n    if (attachment !== \"\") {\r\n      const attachmentRef = storageService\r\n        .ref()\r\n        .child(`${userObj.uid}/${uuidv4()}`);\r\n      const response = await attachmentRef.putString(attachment, \"data_url\");\r\n      attachmentUrl = await response.ref.getDownloadURL();\r\n      console.log(\"submit1\");\r\n    }\r\n    const nweetObj = {\r\n      text: nweet,\r\n      createdAt: Date.now(),\r\n      creatorId: userObj.uid,\r\n      attachmentUrl,\r\n    };\r\n    await dbService.collection(\"gweet\").add(nweetObj);\r\n    console.log(\"submit2\");\r\n    setNweet(\"\");\r\n    setAttachment(\"\");\r\n  };\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setNweet(value);\r\n  };\r\n  const onFileChange = (event) => {\r\n    const {\r\n      target: { files },\r\n    } = event;\r\n    const theFile = files[0];\r\n    const reader = new FileReader();\r\n    reader.onloadend = (finishedEvent) => {\r\n      const {\r\n        currentTarget: { result },\r\n      } = finishedEvent;\r\n      setAttachment(result);\r\n    };\r\n    if (Boolean(theFile)) {\r\n      reader.readAsDataURL(theFile);\r\n    }\r\n  };\r\n  const onClearAttachment = () => setAttachment(\"\");\r\n  return (\r\n    <form onSubmit={onSubmit} className=\"factoryForm\">\r\n      <div className=\"factoryInput__container\">\r\n        <input\r\n          className=\"factoryInput__input\"\r\n          value={nweet}\r\n          onChange={onChange}\r\n          type=\"text\"\r\n          placeholder=\"What's on your mind?\"\r\n          maxLength={120}\r\n        />\r\n        <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\" />\r\n      </div>\r\n      <label htmlFor=\"attach-file\" className=\"factoryInput__label\">\r\n        <span>Add photos</span>\r\n        <FontAwesomeIcon icon={faPlus} />\r\n      </label>\r\n      <input\r\n        id=\"attach-file\"\r\n        type=\"file\"\r\n        accept=\"image/*\"\r\n        onChange={onFileChange}\r\n        style={{\r\n          opacity: 0,\r\n        }}\r\n      />\r\n      {attachment && (\r\n        <div className=\"factoryForm__attachment\">\r\n          <img\r\n            src={attachment}\r\n            style={{\r\n              backgroundImage: attachment,\r\n            }}\r\n          />\r\n          <div className=\"factoryForm__clear\" onClick={onClearAttachment}>\r\n            <span>Remove</span>\r\n            <FontAwesomeIcon icon={faTimes} />\r\n          </div>\r\n        </div>\r\n      )}\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default NweetFactory;\r\n","import { dbService } from \"fbase\";\r\nimport { useState, useEffect } from \"react\";\r\nimport Gweet from \"./Gweet\";\r\nimport NweetFactory from \"component/NweetFactory\";\r\n\r\nconst Home = ({ userObj }) => {\r\n  const [gweets, setGweets] = useState([]);\r\n\r\n  useEffect(() => {\r\n    dbService\r\n      .collection(\"gweet\")\r\n      .orderBy(\"createdAt\", \"desc\")\r\n      .onSnapshot((snapshot) => {\r\n        const newArray = snapshot.docs.map((document) => ({\r\n          id: document.id,\r\n          ...document.data(),\r\n        }));\r\n        setGweets(newArray);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <NweetFactory userObj={userObj} />\r\n      <div style={{ marginTop: 30 }}>\r\n        {gweets.map((gweet) => (\r\n          <Gweet\r\n            key={gweet.id}\r\n            gweetObj={gweet}\r\n            isOwner={gweet.createId === userObj.uid}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\r\nimport { faUser } from \"@fortawesome/free-regular-svg-icons\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Navigation = ({ userObj }) => {\r\n  return (\r\n    <nav>\r\n      <ul style={{ display: \"flex\", justifyContent: \"center\", marginTop: 50 }}>\r\n        <li>\r\n          <Link to=\"/\" style={{ marginRight: 10 }}>\r\n            <FontAwesomeIcon icon={faTwitter} color={\"04AAFF\"} size=\"2x\" />\r\n          </Link>\r\n        </li>\r\n        <li>\r\n          <Link\r\n            to=\"/profile\"\r\n            style={{\r\n              marginLeft: 10,\r\n              display: \"flex\",\r\n              flexDirection: \"column\",\r\n              alignItems: \"center\",\r\n              fontSize: 12,\r\n            }}\r\n          >\r\n            <FontAwesomeIcon icon={faUser} color={\"#04AAFF\"} size=\"2x\" />\r\n            <span style={{ margintop: 10 }}>\r\n              {userObj.displayName\r\n                ? `${userObj.displayName}의 Profile`\r\n                : \"Profile\"}\r\n            </span>\r\n          </Link>\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navigation;\r\n","import { authService, dbService } from \"fbase\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useState, useEffect } from \"react\";\r\n\r\nconst Profile = ({ userObj, refreshUser }) => {\r\n  const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\r\n\r\n  const history = useHistory();\r\n  const onLogOutClick = () => {\r\n    authService.signOut();\r\n    history.push(\"/\");\r\n  };\r\n\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setNewDisplayName(value);\r\n  };\r\n\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    if (userObj.displayName !== newDisplayName) {\r\n      await userObj.updateProfile({ displayName: newDisplayName });\r\n      refreshUser();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <form onSubmit={onSubmit} className=\"profileForm\">\r\n        <input\r\n          onChange={onChange}\r\n          type=\"text\"\r\n          autoFocus\r\n          placeholder=\"Display name\"\r\n          value={newDisplayName}\r\n          className=\"formInput\"\r\n        />\r\n        <input\r\n          type=\"submit\"\r\n          value=\"Update Profile\"\r\n          className=\"formBtn\"\r\n          style={{\r\n            marginTop: 10,\r\n          }}\r\n        />\r\n      </form>\r\n      <span className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>\r\n        Log Out\r\n      </span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n// const getMyGweets = async () => {\r\n//   const gweets = await dbService\r\n//     .collection(\"gweets\")\r\n//     .where(\"createId\", \"==\", userObj.uid)\r\n//     .orderBy(\"createAt\", \"asc\")\r\n//     .get();\r\n//   console.log(gweets);\r\n// };\r\n\r\n// useEffect(() => {\r\n//   getMyGweets();\r\n// }, []);\r\n// 필터링 코드\r\n","import { HashRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport Auth from \"routes/Auth\";\r\nimport Home from \"routes/Home\";\r\nimport Navigation from \"routes/Navigation\";\r\nimport Profile from \"routes/Profile\";\r\n\r\nconst AppRouter = ({ isLoggedIn, userObj, refreshUser }) => {\r\n  return (\r\n    <Router>\r\n      {isLoggedIn && <Navigation userObj={userObj} />}\r\n      <Switch>\r\n        <>\r\n          {isLoggedIn ? (\r\n            <div\r\n              style={{\r\n                maxWidth: 890,\r\n                width: \"100%\",\r\n                margin: \"0 auto\",\r\n                marginTop: 80,\r\n                display: \"flex\",\r\n                justifyContent: \"center\",\r\n              }}\r\n            >\r\n              <Route exact path=\"/\">\r\n                <Home userObj={userObj} />\r\n              </Route>\r\n              <Route exact path=\"/profile\">\r\n                <Profile userObj={userObj} refreshUser={refreshUser} />\r\n              </Route>\r\n            </div>\r\n          ) : (\r\n            <Route exact path=\"/\">\r\n              <Auth />\r\n            </Route>\r\n          )}\r\n        </>\r\n      </Switch>\r\n    </Router>\r\n  );\r\n};\r\nexport default AppRouter;\r\n","import { useEffect, useState } from \"react\";\r\nimport AppRouter from \"component/Router\";\r\nimport { authService } from \"fbase\";\r\n\r\nfunction App() {\r\n  const [init, setInit] = useState(false);\r\n\r\n  const [userObj, setUserObj] = useState(null);\r\n  console.log(userObj, \"App\");\r\n\r\n  const refreshUser = () => {\r\n    const user = authService.currentUser;\r\n    setUserObj({\r\n      uid: user.uid,\r\n      displayName: user.displayName,\r\n      updateProfile: (args) => user.updateProfile(args),\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    authService.onAuthStateChanged((user) => {\r\n      if (user) {\r\n        setUserObj({\r\n          uid: user.uid,\r\n          displayName: user.displayName,\r\n          updateProfile: (args) => user.updateProfile(args),\r\n        });\r\n      } else {\r\n        setUserObj(false);\r\n      }\r\n      setInit(true);\r\n    });\r\n  }, []);\r\n  return (\r\n    <>\r\n      {init ? (\r\n        <AppRouter\r\n          isLoggedIn={Boolean(userObj)}\r\n          userObj={userObj}\r\n          refreshUser={refreshUser}\r\n        />\r\n      ) : (\r\n        \"initializing..\"\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"styles.css\";\r\nimport App from \"component/App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}